{"version":3,"sources":["util/API.js","components/Nav.js","components/Employee.js","components/Directory.js","App.js","index.js"],"names":["API","search","axios","get","useStyles","makeStyles","theme","root","flexGrow","justifyContent","menuButton","marginRight","spacing","title","Nav","onUpdate","classes","React","useState","location","setLocation","sort","setSort","country","setCountry","AppBar","position","Toolbar","Typography","variant","className","FormControl","component","RadioGroup","aria-label","name","value","onChange","event","target","FormControlLabel","control","Radio","label","paper","padding","margin","maxWidth","image","width","height","img","display","maxHeight","Employee","nameF","nameL","city","email","phone","url","Grid","item","xs","sm","Paper","ButtonBase","href","alt","src","container","direction","gutterBottom","color","textAlign","palette","text","secondary","Directory","data","setData","useEffect","then","res","dataArr","results","forEach","push","filter","a","b","last","localeCompare","Employees","map","emp","i","first","picture","large","cell","newData","reverse","sortEmployees","usFilter","indexOf","intFilter","filterEmployees","sortCountry","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0c2c3cef.chunk.js","sourcesContent":["// please add your own API key if you are running this on your local machine\r\n\r\nimport axios from \"axios\";\r\n\r\nconst BASEURL = 'https://randomuser.me/api/?results=60';\r\n\r\nconst API = {\r\n  search: function() {\r\n    return axios.get(BASEURL);\r\n  }\r\n};\r\n\r\nexport default API\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    justifyContent: 'center',\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 3,\r\n  },\r\n}));\r\n\r\nfunction Nav({ onUpdate }) {\r\n    const classes = useStyles();\r\n    const [location, setLocation] = React.useState('all');\r\n    const [sort, setSort] = React.useState('alph');\r\n    const [country, setCountry] = React.useState('coun');\r\n\r\n    const handleChangeSort = (event) => {\r\n        onUpdate(event.target)\r\n        setSort(event.target.value);\r\n    };\r\n    \r\n    const handleChangeLocation = (event) => {\r\n        onUpdate(event.target)\r\n        setLocation(event.target.value);\r\n    };\r\n\r\n    const handleChangeCountry = (event) => {\r\n        onUpdate(event.target)\r\n        setCountry(event.target.value);\r\n    };\r\n\r\n    return (\r\n        <>\r\n        <AppBar position=\"static\">\r\n            <Toolbar>\r\n                <Typography variant=\"h3\" className={classes.title}>\r\n                Employee Directory\r\n                </Typography>\r\n                \r\n                <FormControl component=\"fieldset\">\r\n                    <RadioGroup aria-label=\"sort\" name=\"sort\" value={sort} onChange={handleChangeSort}>\r\n                        <FormControlLabel value=\"alph\" control={<Radio />} label=\"Alphabetical\" />\r\n                        <FormControlLabel value=\"alphrev\" control={<Radio />} label=\"Alphabetical, Reverse\" />\r\n                    </RadioGroup>\r\n                </FormControl>\r\n\r\n                <FormControl component=\"fieldset\">\r\n                    <RadioGroup aria-label=\"country\" name=\"country\" value={country} onChange={handleChangeCountry}>\r\n                        <FormControlLabel value=\"coun\" control={<Radio />} label=\"Country\" />\r\n                        <FormControlLabel value=\"counrev\" control={<Radio />} label=\"Country, Reverse\" />\r\n                    </RadioGroup>\r\n                </FormControl>\r\n\r\n                <FormControl component=\"fieldset\">\r\n                    <RadioGroup aria-label=\"location\" name=\"location\" value={location} onChange={handleChangeLocation}>\r\n                        <FormControlLabel value=\"all\" control={<Radio />} label=\"All\" />\r\n                        <FormControlLabel value=\"us\" control={<Radio />} label=\"United States\" />\r\n                        <FormControlLabel value=\"int\" control={<Radio />} label=\"International\" />\r\n                    </RadioGroup>\r\n                </FormControl>\r\n\r\n            </Toolbar>\r\n        </AppBar>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Nav\r\n","import { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ButtonBase from '@material-ui/core/ButtonBase';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    paper: {\r\n      padding: theme.spacing(2),\r\n      margin: 'auto',\r\n      maxWidth: 500,\r\n    },\r\n    image: {\r\n      width: 128,\r\n      height: 128,\r\n    },\r\n    img: {\r\n      margin: 'auto',\r\n      display: 'block',\r\n      maxWidth: '100%',\r\n      maxHeight: '100%',\r\n    },\r\n  }));\r\n\r\nfunction Employee({title, nameF, nameL, image, city, country, email, phone}) {\r\n    const classes = useStyles();\r\n    const url = \"https://www.google.com/search?q=\" + nameF + \" \" + nameL + \" \" + country\r\n    return (\r\n        <Grid item xs={6} sm={2}>\r\n          <Paper className={classes.paper}>\r\n          <Grid item>\r\n            <ButtonBase className={classes.image} href={url}>\r\n              <img className={classes.img} alt=\"complex\" src={image} />\r\n            </ButtonBase>\r\n          </Grid>\r\n          \r\n          <Grid item xs={12} sm container>\r\n\r\n          <Grid item xs container direction=\"column\" spacing={2}>\r\n            \r\n          <Grid item xs>\r\n                <Typography gutterBottom variant=\"subtitle1\">\r\n                  {title} {nameF} {nameL}\r\n                </Typography>\r\n                <Typography variant=\"body2\" gutterBottom>\r\n                  Email: {email}\r\n                </Typography>\r\n                <Typography variant=\"body2\" color=\"textSecondary\">\r\n                  Phone: {phone}\r\n                </Typography>\r\n              </Grid>\r\n            </Grid>\r\n\r\n            <Grid item>\r\n              <Typography variant=\"subtitle1\">{city}, {country}</Typography>\r\n            </Grid>\r\n          </Grid>\r\n          </Paper>\r\n\r\n\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default Employee\r\n","import React, { useState, useEffect } from 'react';\r\n\r\n// API\r\nimport API from '../util/API.js'\r\n\r\n// components\r\nimport Nav from './Nav.js'\r\nimport Employee from './Employee.js'\r\n\r\n// material ui\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    paper: {\r\n      padding: theme.spacing(2),\r\n      textAlign: 'center',\r\n      color: theme.palette.text.secondary,\r\n    },\r\n  }));\r\n\r\nfunction Directory() {\r\n\r\n    const classes = useStyles();\r\n\r\n    const [data, setData] = useState([])\r\n\r\n    useEffect(() => {\r\n        API.search()\r\n        .then((res) => {\r\n            let dataArr = []\r\n            res.data.results.forEach(res => {\r\n                dataArr.push({\r\n                    data: res,\r\n                    filter: false\r\n                })\r\n            })\r\n\r\n            dataArr.sort((a, b) => a.data.name.last.localeCompare(b.data.name.last))\r\n            setData(dataArr)\r\n            \r\n        })\r\n      },[]);\r\n\r\n    const Employees = data.map((emp, i) => {\r\n        if (!emp.filter) {\r\n            return <Employee key={i} title={emp.data.name.title} nameF={emp.data.name.first} nameL={emp.data.name.last} image={emp.data.picture.large} city={emp.data.location.city} country={emp.data.location.country} email={emp.data.email} phone={emp.data.cell}/>\r\n        }\r\n\r\n        return <></>\r\n    })\r\n        \r\n      function handleInputs(event){\r\n        switch(event.name) {\r\n            case \"sort\":\r\n                sortEmployees(event.value)\r\n                break;\r\n            case \"location\":\r\n                filterEmployees(event.value)\r\n                break;\r\n            case \"country\":\r\n                sortCountry(event.value)\r\n                break;\r\n            default:\r\n                break;\r\n            }\r\n      }\r\n\r\n    function sortEmployees(sort) {\r\n        \r\n        let newData = [...data];\r\n\r\n        if (sort === 'alph') {\r\n            newData.sort((a, b) => a.data.name.last.localeCompare(b.data.name.last))\r\n        } else {\r\n            newData.reverse()      \r\n        }\r\n\r\n        setData(newData)\r\n    }\r\n\r\n    function sortCountry(sort) {\r\n        \r\n        let newData = [...data];\r\n\r\n        if (sort === 'coun') {\r\n            newData.sort((a, b) => a.data.location.country.localeCompare(b.data.location.country))\r\n        } else {\r\n            newData.reverse()      \r\n        }\r\n\r\n        setData(newData)\r\n    }\r\n\r\n    function filterEmployees(filter) {\r\n        \r\n        let newData = [...data]\r\n        if (filter === \"all\") {filter = \"usint\"}\r\n        let usFilter = filter.indexOf(\"us\") > -1\r\n        let intFilter = filter.indexOf(\"int\") > -1\r\n        \r\n        newData.forEach(item => {\r\n\r\n            if (item.data.location.country === \"United States\") {\r\n                item.filter = !usFilter\r\n            } else {\r\n                item.filter = !intFilter\r\n            }\r\n        })\r\n\r\n        setData(newData)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Nav onUpdate={handleInputs} />\r\n\r\n            <div className={classes.root}>\r\n                <Grid container spacing={3}>\r\n\r\n                    {Employees}\r\n\r\n                </Grid>\r\n            </div>\r\n        </>\r\n    )\r\n    \r\n}\r\n\r\nexport default Directory","import './App.css';\r\n\r\nimport Directory from './components/Directory.js'\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"employeeDirectory\">\r\n      <Directory />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}